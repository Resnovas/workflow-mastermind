name: Pull Request Management

# This workflow automatically lables PR to ensure that all PR's are correct within the release draft.

on:
  pull_request: 
    types:
      - opened
      - edited
      - synchronize
  pull_request_review:
    types:
      - submitted

jobs:
  # Automatically blocks WIP pull request based on the title
  wip:
    name: Work in progress job
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - name: Work in progress label
        uses: y-temp4/add-wip-label@v1.0.0
        if: ${{env.wipLabel}} == true
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Work in progress status
        uses: wip/action@v1.0.0
        if: ${{env.wipEnable}} == true

  # Ensures semantic titles to ensure semantic is achieved when merge is squashed
  semantic:
    name: Semantic Title
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - name: Check title
        if: ${{env.semanticEnable}} == true
        uses: amannn/action-semantic-pull-request@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

  # Automatically labels based on files changed
  labeler:
    name: Path Labeler
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: actions/checkout@v2.3.1
      - uses: actions-ecosystem/action-size@v2
        if: ${{env.labelSize}} == true
        id: size
        with:
          size_xs_label: ${{env.size_xs_label}}
          size_s_label: ${{env.size_s_label}}
          size_m_label: ${{env.size_m_label}}
          size_l_label: ${{env.size_l_label}}
          size_xl_label: ${{env.size_xl_label}}
          size_xxl_label: ${{env.size_xxl_label}}
      - uses: actions-ecosystem/action-remove-labels@v1
        if: ${{env.labelSize}} == true
        with:
          github_token: ${{ secrets.github_token }}
          labels: ${{ steps.size.outputs.stale_labels }}
      - uses: actions-ecosystem/action-add-labels@v1
        if: ${{env.labelSize}} == true
        with:
          github_token: ${{ secrets.github_token }}
          labels: ${{ steps.size.outputs.new_label }}
      - uses: actions/labeler@v2
        if: ${{env.labelPath}} == true
        with:
          configuration-path: ${{env.labelPathConfig}}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: JasonEtco/is-sponsor-label-action@v1
        if: github.event.action == 'opened' && ${{env.labelSponsor}} == true
        with:
          label: ${{env.sponsorLabel}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
      - uses: TimonVS/pr-labeler-action@v3
        if: ${{env.labelBranch}} == true
        with:
          configuration-path: ${{env.labelBranchConfig}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      

  # Automatically approves
  approval:
    name: Pull Request Conflict Check
    needs:
      - wip
      - semantic
      - labeler
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: actions/checkout@v2.3.1
      - name: Warn potential conflicts
        uses: wktk/conflibot@v1
        if: ${{env.conflictPull}} == true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: check if prs are dirty
        if: ${{env.conflictMaster}} == true
        uses: eps1lon/actions-label-merge-conflict@releases/1.x
        with:
          dirtyLabel: ${{env.conflictMasterDirty}}
          removeOnDirtyLabel: ${{env.conflictMasterDirty}}
          repoToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Automatically approve
        uses: hmarr/auto-approve-action@v2.0.0
        if: (${{env.autoApprove}} == true && contains(${{env.autoWhitelist}}, github.actor) || ${{env.autoApprove}} == true && github.actor == github.repository_owner )
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}    
      - name: Run pull request stats
        uses: flowwer-dev/pull-request-stats@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  
  automerge:
    needs:
      - wip
      - semantic
      - labeler
      - approval
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - name: automerge
        if: ${{env.autoMerge}} == true
        uses: "pascalgn/automerge-action@4536e8847eb62fe2f0ee52c8fa92d17aa97f932f"
        env:
          GITHUB_TOKEN: "${{ secrets.ACCESS_TOKEN }}"
          MERGE_LABELS: ${{env.autoMergeLabels}}
          MERGE_REMOVE_LABELS: ${{env.autoMergeDeleteLabels}}
          MERGE_METHOD: ${{env.autoMergeMethod}}
          MERGE_FORKS: ${{env.autoMergeForks}}
          MERGE_RETRIES: ${{env.autoMergeRetries}}
          MERGE_RETRY_SLEEP: ${{env.autoMergeSleep}}
          MERGE_DELETE_BRANCH: ${{env.autoMergeDelete}}