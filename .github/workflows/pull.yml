name: Pull Request Management

# This workflow automatically lables PR to ensure that all PR's are correct within the release draft.

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  # Automatically blocks WIP pull request based on the title
  wip:
    name: Work in progress
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: y-temp4/add-wip-label@v1.0.0
        if: ${{env.wipLabel}} == true
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
      - uses: wip/action@v1.0.0
        if: ${{env.wipEnable}} == true

  # Ensures semantic titles to ensure semantic is achieved when merge is squashed
  semantic:
    name: Semantic Title
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - name: Check title
        if: ${{env.semanticEnable}} == true
        uses: amannn/action-semantic-pull-request@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Automatically labels based on the branch path
  pr-labeler:
    name: Branch Labeler
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: TimonVS/pr-labeler-action@v3
        if: ${{env.labelBranch}} == true
        with:
          configuration-path: ${{env.labelBranchConfig}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Automatically labels the pull request based on size
  label_sizes:
    name: Pull Request Size
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: actions/checkout@v2.3.1
      - uses: actions-ecosystem/action-size@v2
        if: ${{env.labelSize}} == true
        id: size
        with:
          size_xs_label: ${{env.size_xs_label}}
          size_s_label: ${{env.size_s_label}}
          size_m_label: ${{env.size_m_label}}
          size_l_label: ${{env.size_l_label}}
          size_xl_label: ${{env.size_xl_label}}
          size_xxl_label: ${{env.size_xxl_label}}
      - uses: actions-ecosystem/action-remove-labels@v1
        if: ${{env.labelSize}} == true
        with:
          github_token: ${{ secrets.github_token }}
          labels: ${{ steps.size.outputs.stale_labels }}
      - uses: actions-ecosystem/action-add-labels@v1
        if: ${{env.labelSize}} == true
        with:
          github_token: ${{ secrets.github_token }}
          labels: ${{ steps.size.outputs.new_label }}

  # Automatically labels based on files changed
  path-labeler:
    name: Path Labeler
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: actions/labeler@v2
        if: ${{env.labelPath}} == true
        with:
          configuration-path: ${{env.labelPathConfig}}
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

  # Automatically label sponsors requests
  sponsor:
    name: Sponsor Label
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: JasonEtco/is-sponsor-label-action@v1
        if: ${{env.labelSponsor}} == true
        with:
          label: Sponsor Request ❤️
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Automatically checks for conflicts with other pull requests
  conflibot:
    name: Pull Request Conflict Check
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: actions/checkout@v2.3.1
      - name: Warn potential conflicts
        uses: wktk/conflibot@v1
        if: ${{env.conflictPull}} == true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: check if prs are dirty
        if: ${{env.conflictMaster}} == true
        uses: eps1lon/actions-label-merge-conflict@releases/1.x
        with:
          dirtyLabel: ${{env.conflictMasterDirty}}
          removeOnDirtyLabel: ${{env.conflictMasterDirty}}
          repoToken: "${{ secrets.GITHUB_TOKEN }}"

  auto-approve:
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: hmarr/auto-approve-action@v2.0.0
        if: (${{env.autoApprove}} == true && contains(${{env.approvalList}}, github.actor) || ${{env.autoApprove}} == true && github.actor == github.repository_owner )
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
