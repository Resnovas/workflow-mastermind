name: Release Management

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - closed
  gollum: 

jobs:
  createBranch:
    name: create branch for automation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name != 'gollum' && github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: peterjgrainger/action-create-branch@2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{env.autoBranchPrefix}}${{env.autoBranch}}_release
  
  # Using the config in ../release-drafter.yml creates release drafts automatically
  update_release_draft:
    name: Create release Draft
    runs-on: ubuntu-latest
    needs: createBranch
    if: github.event_name != 'gollum' && github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - name: Import GPG key
        if: ${{env.changelog}} == true && ${{env.gpgEnable}} == true
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v2
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: ${{env.gpgSigningKey}}
          git_commit_gpgsign: ${{env.gpgCommitSign}}
          git_tag_gpgsign: ${{env.gpgTagSign}}
          git_push_gpgsign: ${{env.gpgPushSign}}
      - uses: peterjgrainger/action-create-branch@2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{env.autoBranchPrefix}}${{env.autoBranch}}_release
      - run: |
          if [ "${{contains(github.event.pull_request.labels.*.name, ${{env.releaseMajor}})}}" = "true" ] || [ "${{contains(github.event.pull_request.labels.*.name, ${{env.releaseMinor}})}}" = "true" ] || [ "${{contains(github.event.pull_request.labels.*.name, ${{env.releasePatch}})}}" = "true" ]; 
          then echo ::set-env name=publish::true ;
          else echo ::set-env name=publish::false ; 
          fi ; 
      - uses: release-drafter/release-drafter@v5
        id: release
        if: ${{env.releaseDrafter}} == true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: ${{env.publish}}
      - run: |
          if [ "${{env.gpgEnable}}" = "false" ]; 
          then echo ::set-env name=commitName::"${{ env.changelogName }}" ; echo ::set-env name=commitEmail::"${{ env.changelogEmail }}" ; 
          else echo ::set-env name=commitName::"${{ steps.import_gpg.outputs.name }}" ; echo ::set-env name=commitEmail::"${{ steps.import_gpg.outputs.email }}" ; 
          fi ; 

          if [ "${{steps.release.outputs.tag_name}}" != "" ]; 
          then echo "${{steps.release.outputs.tag_name}}" > .github/workflow-version.txt ; echo ::set-env name=versioning::true ;
          fi;
      - name: Commit files
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: set version file"
          branch: ${{env.autoBranchPrefix}}${{env.autoBranch}}_release
          commit_user_name: ${{env.commitName}}
          commit_user_email: ${{env.commitEmail}}
          commit_author: "${{env.commitName}} <${{env.commitEmail}}>"
          commit_options: ${{env.CommitOptions}}
          push_options: ${{env.PushOptions}}
          
  # creates a changelog, commits, pushes, and creates a pull request
  create-changelog:
    name: Copy files for wiki & docs
    runs-on: ubuntu-18.04
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    needs: 
      - createBranch
      - update_release_draft
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - name: Import GPG key
        if: ${{env.changelog}} == true && ${{env.gpgEnable}} == true
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v2
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: ${{env.gpgSigningKey}}
          git_commit_gpgsign: ${{env.gpgCommitSign}}
          git_tag_gpgsign: ${{env.gpgTagSign}}
          git_push_gpgsign: ${{env.gpgPushSign}}
      - name: "Check-out"
        if: ${{env.changelog}} == true
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{env.autoBranchPrefix}}${{env.autoBranch}}_release
          fetch-depth: 0
      - uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        if: ${{env.changelog}} == true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          output: ${{ env.changelogFile }}
          pullRequests: ${{env.pullRequests}}
          prWoLabels: "${{env.prWoLabels}}"
          excludeLabels: "${{env.excludeLabels}}"
          breakingLabels: "${{env.breakingLabels}}"
          enhancementLabels: "${{env.enhancementLabels}}"
          bugLabels: "${{env.bugLabels}}"
          deprecatedLabels: "${{env.deprecatedLabels}}"
          removedLabels: "${{env.removedLabels}}"
          securityLabels: "${{env.securityLabels}}"
          stripGeneratorNotice: ${{env.stripGeneratorNotice}}
      - name: manage files
        if: ${{env.copyEnable}} == true
        run: |
            cp README.md docs/Home.md
            cp docs/SUMMARY.md docs/_Sidebar.md
      - run: if [ ${{env.gpgEnable}} == false ]; then echo ::set-env name=commitName::${{ env.changelogName }} ; echo ::set-env name=commitEmail::${{ env.changelogEmail }} ; else echo ::set-env name=commitName::${{ steps.import_gpg.outputs.name }} ; echo ::set-env name=commitEmail::${{ steps.import_gpg.outputs.email }} ; fi
      - name: Commit files
        id: commit
        if: ${{env.changelog}} == true
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "docs: update changelog"
          branch: ${{env.autoBranchPrefix}}${{env.autoBranch}}_release
          commit_user_name: ${{env.commitName}}
          commit_user_email: ${{env.commitEmail}}
          commit_author: "${{env.commitName}} <${{env.commitEmail}}>"
          commit_options: ${{env.CommitOptions}}
          push_options: ${{env.PushOptions}}
      - name: Sync docs to wiki
        if: ${{env.wikiEnable}} == true && ${{env.docsToWiki}} == true
        uses: newrelic/wiki-sync-action@master
        with:
          source: ${{env.docsToWikiSource}}
          destination: ${{env.docsToWikiDestination}}
          token: ${{ secrets.ACCESS_TOKEN }}
      - run: echo ::set-env name=repository_name::$(echo "${{github.repository}}" | awk -F / '{print $2}')
      - name: Copy to ${{github.repository}}
        if: ${{env.wikiEnable}} == true && ${{env.docsToRepo}} == true
        uses: andstor/copycat-action@v3
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          src_path: ${{env.docsToRepoSource}}
          dst_path: ${{env.docsToRepoDestination}}
          dst_owner: ${{github.repository_owner}}
          dst_repo_name: ${{env.repository_name}}${{env.docsToRepoSuffix}}
          commit_message: "docs: auto update"
        continue-on-error: true
  
    # syncs from the github inbuilt wiki
  job-sync-wiki-to-docs:
    name: Sync from wiki
    runs-on: ubuntu-latest
    if: github.event_name == 'gollum'
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - uses: peterjgrainger/action-create-branch@2.0.1
        if: ${{env.wikiEnable}} == true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{env.autoBranchPrefix}}${{env.autoBranch}}_wiki
      - name: Checkout Repo
        if: ${{env.wikiEnable}} == true
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{env.autoBranchPrefix}}${{env.autoBranch}}_wiki
      - name: Sync Wiki to Docs
        uses: newrelic/wiki-sync-action@master
        with:
          source: ${{env.docsToWikiDestination}}
          destination: ${{env.docsToWikiSource}}
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{env.autoBranchPrefix}}${{env.autoBranch}}_wiki
      - name: pull-request
        if: ${{env.wikiEnable}} == true && ${{env.wikiToDocs}} == true
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          source_branch: ${{env.autoBranchPrefix}}${{env.autoBranch}}_wiki
          destination_branch: ${{env.autoDestination}}
          pr_title: ${{env.wikiToDocsPRtitle}}
          pr_body: ${{env.autoBody}}
          pr_label: ${{env.autoLabels}}
      - run: echo ::set-env name=repository_name::$(echo "${{github.repository}}" | awk -F / '{print $2}')
      - name: Copy to ${{github.repository}}
        if: ${{env.wikiEnable}} == true && ${{env.wikiToRepo}} == true
        uses: andstor/copycat-action@v3
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          src_path: ${{env.docsToRepoSource}}
          dst_path: /${{env.docsToRepoDestination}}
          dst_owner: ${{github.repository_owner}}
          dst_repo_name: ${{env.repository_name}}${{env.docsToRepoSuffix}}
          commit_message: "docs: auto update"
        continue-on-error: true

  misc:
    name: Pull Request Completion misc jobs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    needs:
      - createBranch
      - update_release_draft
      - create-changelog
    steps:
      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: allconfig.yml
      - name: Checkout
        if: ${{env.ensureLabels}} == true
        uses: actions/checkout@v2.3.1
      - name: Run Labeler
        if: ${{env.ensureLabels}} == true
        uses: crazy-max/ghaction-github-labeler@v2.1.0
        with:
          yaml_file: ${{env.ensureLabelsConfig}}
          skip_delete: ${{env.ensureLabelsSkipDelete}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: if [ ${{env.inclusiveOrg}} === 'owner' ]; then echo ::set-env name=inclusiveorg::${{github.repository_owner}} ; else echo ::set-env name=inclusiveorg::${{env.inclusiveOrg}} ; fi
      - name: Invite contributor to the organization
        uses: lekterable/inclusive-organization-action@v1.1.0
        if: ${{env.inclusiveEnabled}} == true
        with:
          organization: ${{env.inclusiveorg}}
          team: ${{env.inclusiveTeam}}
          comment: ${{env.inclusiveComment}}
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        continue-on-error: true
  
  pullordelete:
    name: Pull Request Completion misc jobs
    runs-on: ubuntu-latest
    steps:
      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          source_branch: ${{env.autoBranchPrefix}}${{env.autoBranch}}_release
          destination_branch: ${{env.autoDestination}}
          pr_title: "chore: automatic updates from release workflow"
          pr_body: ${{env.autoBody}}
          pr_label: ${{env.autoLabels}}